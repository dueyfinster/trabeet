---
- hosts: localhost
  connection: local
  gather_facts: no

  vars_files:
    - default.config.yml

  pre_tasks:
    - name: Make the latest version of the base image available locally.
      docker_image:
        name: '{{ base_image }}'
        source: pull
        force_source: true

    - name: Create the Docker container.
      docker_container:
        image: '{{ base_image }}'
        name: '{{ container_name }}'
        command: sleep infinity

    - name: Add the newly created container to the inventory.
      add_host:
        hostname: '{{ container_name }}'
        ansible_connection: docker

    - name: Ensure Python is installed.
      raw: >
        apt-get update &&
        apt-get install -y --no-install-recommends python3
      delegate_to: '{{ container_name }}'

    - name: Gather facts inside the container.
      setup:
      delegate_to: '{{ container_name }}'

    - name: Install APT Packages
      package:
        name: "{{ item }}"
        state: present
      with_items: "{{ pkgs_to_install }}"
      delegate_to: '{{ container_name }}'

    - name: Install latest available version of transmission-rss
      community.general.gem:
        name: transmission-rss
        state: latest
      delegate_to: '{{ container_name }}'

    - name: Copy Binaries to /usr/bin
      copy:
        src: bin/
        dest: /usr/bin
        mode: 0755
      delegate_to: '{{ container_name }}'
    - name: Copy Config files to home directory
      copy:
        src: config/
        dest: /root/
        mode: 0600
      delegate_to: '{{ container_name }}'
    - name: Copy NGINX config
      copy:
        src: config/nginx
        dest: /etc/nginx
        mode: 0660
      delegate_to: '{{ container_name }}'

  roles:
    - name: youtube-dl
      delegate_to: '{{ container_name }}'
    - name: webhook
      delegate_to: '{{ container_name }}'
    - name: beets
      delegate_to: '{{ container_name }}'
    - name: filebot
      delegate_to: '{{ container_name }}'


  post_tasks:
    - name: Clean up the container.
      shell: >
        apt-get remove --purge -y python &&
        rm -rf /var/lib/apt/lists/*
      delegate_to: '{{ container_name }}'
      args:
        warn: no

    - name: Commit the container.
      command: >
        docker commit
        -c 'CMD ["/usr/bin/start"]'
        {{ container_name }} {{ image_namespace }}/{{ image_name }}:latest

    - name: Remove the container.
      docker_container:
        name: '{{ container_name }}'
        state: absent
